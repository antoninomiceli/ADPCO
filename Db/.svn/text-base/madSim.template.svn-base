# Database for the records specific to the simulated detector driver
# Mark Rivers
# March 23, 2008

record(longout, "$(P)$(R)sleep_ms")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))sleep_ms")
}

record(longout, "$(P)$(R)is_sleep")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))is_sleep")
}

record(longout, "$(P)$(R)is_log")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))is_log")
}


record(longin, "$(P)$(R)run_counter")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))run_counter")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)test_pattern_type")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))test_pattern_type")
}


record(ao, "$(P)$(R)noise_amplitude")
{
   field(PINI, "1")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))noise_amplitude")
   field(PREC, "2")
}
record(ao, "$(P)$(R)test_img_inc")
{
   field(PINI, "1")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))test_img_inc")
   field(PREC, "2")
}








record(longout, "$(P)$(R)is_noise")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))is_noise")
}

			
record(longin, "$(P)$(R)test_pattern_type_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))test_pattern_type")
   field(SCAN, "I/O Intr")
}
record(ai, "$(P)$(R)noise_amplitude_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))noise_amplitude_RBV")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}
record(ai, "$(P)$(R)test_img_inc_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))test_img_inc_RBV")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}
record(longin, "$(P)$(R)is_noise_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))is_noise")
   field(SCAN, "I/O Intr")
}


record(longin, "$(P)$(R)is_display_img_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))is_display_img")
   field(SCAN, "I/O Intr")
}
record(longout, "$(P)$(R)is_display_img")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))is_display_img")
}




record(longin, "$(P)$(R)cor_run_counter")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))cor_run_counter")
   field(SCAN, "I/O Intr")
}


record(longin, "$(P)$(R)cor_is_grab_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))cor_is_grab")
   field(SCAN, "I/O Intr")
}
record(longout, "$(P)$(R)cor_is_grab")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))cor_is_grab")
}

record(longout, "$(P)$(R)cor_is_loadccf")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))cor_is_loadccf")
}



record(mbbo, "$(P)$(R)cor_use_fpga")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))cor_use_fpga")
   field(ZRST, "No FPGA")
   field(ZRVL, "0")
   field(ONST, "Use FPGA")
   field(ONVL, "1")
}



record(longout, "$(P)$(R)cor_is_load_fpga_regs")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))cor_is_load_fpga_regs")
}

record(longout, "$(P)$(R)cor_is_read_fpga_regs")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))cor_is_read_fpga_regs")
}


record(stringout, "$(P)$(R)cor_ccf_filename")
{
    field(PINI, "1")
    field(DTYP, "asynOctetWrite")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))cor_ccf_filename")
}

record(stringin, "$(P)$(R)cor_ccf_filename_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))cor_ccf_filename")
   field(VAL,  "Unknown")
   field(SCAN, "I/O Intr")
}


record(mbbo, "$(P)$(R)cor_fpga_command")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))cor_fpga_command")
   field(ZRST, "Invert")
   field(ZRVL, "0")
   field(ONST, "PassThru")
   field(ONVL, "3")
   field(TWST, "StoreDark")
   field(TWVL, "1")
   field(THST, "ReadDark")
   field(THVL, "2")
   field(FRST, "Sub Dark")
   field(FRVL, "4")
   field(FVST, "Average")
   field(FVVL, "7")
}


record(longout, "$(P)$(R)cor_fpga_coef")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))cor_fpga_coef")
}
record(longout, "$(P)$(R)cor_fpga_coef_reg")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))cor_fpga_coef_reg")
}

record(stringout, "$(P)$(R)cor_fpga_reg_filename")
{
    field(PINI, "1")
    field(DTYP, "asynOctetWrite")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))cor_fpga__reg_filename")
}

record(stringin, "$(P)$(R)cor_fpga_reg_filename_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))cor_fpga_reg_filename")
   field(VAL,  "Unknown")
   field(SCAN, "I/O Intr")
}


record(longout, "$(P)$(R)cor_is_sleep")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))cor_is_sleep")
}


record(longout, "$(P)$(R)w_which_pattern")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))w_which_pattern")
}

record(longout, "$(P)$(R)w_open_com")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))w_open_com")
}

record(longout, "$(P)$(R)w_close_com")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))w_close_com")
}

record(longin, "$(P)$(R)w_is_com_open")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))w_is_com_open")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)w_run_counter")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))w_run_counter")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)w_is_sleep")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))w_is_sleep")
}


record(longout, "$(P)$(R)d_is_sleep_ms")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))d_is_sleep_ms")
}


