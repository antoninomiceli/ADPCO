# Database for the records specific to the simulated detector driver
# Mark Rivers
# March 23, 2008




record(longout, "$(P)$(R)w_open_com")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_open_com")
}

record(longout, "$(P)$(R)w_close_com")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_close_com")
}

record(longin, "$(P)$(R)w_is_com_open")
{
   field(PINI, "0")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_is_com_open")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)w_run_counter")
{
   field(PINI, "0")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_run_counter")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)w_is_sleep")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_is_sleep")
}



#########################################################################
# HEADER
#
########################################################################


record(longin, "$(P)$(R)c_clear_header_RBV")
{
   field(PINI, "0")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))c_clear_header")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)c_clear_header")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))c_clear_header")
}


record(stringout, "$(P)$(R)c_add_header_str")
{
    field(PINI, "0")
    field(DTYP, "asynOctetWrite")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))c_add_header_str")
}

record(stringin, "$(P)$(R)c_add_header_str_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))c_add_header_str")
   field(VAL,  "Unknown")
   field(SCAN, "I/O Intr")
}




#########################################################################
# CORRECTIONS
#
########################################################################


###
###

record(mbbo, "$(P)$(R)c_is_autocorrect")
{
   field(PINI, "0")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))c_is_autocorrect")
   field(ZRST, "No")
   field(ZRVL, "0")
   field(ONST, "Yes")
   field(ONVL, "1")
}

record(mbbi, "$(P)$(R)c_is_autocorrect_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))c_is_autocorrect")
   field(ZRST, "No")
   field(ZRVL, "0")
   field(ONST, "Yes")
   field(ONVL, "1")
   field(SCAN, "I/O Intr")
}



###
###


record(longin, "$(P)$(R)c_do_correct_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))c_do_correct")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)c_do_correct")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))c_do_correct")
}

###
###

record(mbbo, "$(P)$(R)c_is_corr_dark")
{
   field(PINI, "0")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))c_is_corr_dark")
   field(ZRST, "No")
   field(ZRVL, "0")
   field(ONST, "Yes")
   field(ONVL, "1")
}

record(mbbi, "$(P)$(R)c_is_corr_dark_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))c_is_corr_dark")
   field(ZRST, "No")
   field(ZRVL, "0")
   field(ONST, "Yes")
   field(ONVL, "1")
   field(SCAN, "I/O Intr")
}


###
###
record(mbbo, "$(P)$(R)c_is_corr_spatial")
{
   field(PINI, "0")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))c_is_corr_spatial")
   field(ZRST, "No")
   field(ZRVL, "0")
   field(ONST, "Yes")
   field(ONVL, "1")
}

record(mbbi, "$(P)$(R)c_is_corr_spatial_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))c_is_corr_spatial")
   field(ZRST, "No")
   field(ZRVL, "0")
   field(ONST, "Yes")
   field(ONVL, "1")
   field(SCAN, "I/O Intr")
}


###
###

record(mbbo, "$(P)$(R)c_is_corr_flood")
{
   field(PINI, "0")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))c_is_corr_flood")
   field(ZRST, "No")
   field(ZRVL, "0")
   field(ONST, "Yes")
   field(ONVL, "1")
}

record(mbbi, "$(P)$(R)c_is_corr_flood_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))c_is_corr_flood")
   field(ZRST, "No")
   field(ZRVL, "0")
   field(ONST, "Yes")
   field(ONVL, "1")
   field(SCAN, "I/O Intr")
}



###
###
record(longin, "$(P)$(R)c_is_check_tags_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))c_is_check_tags")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)c_is_check_tags")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))c_is_check_tags")
}

###
###

record(mbbo, "$(P)$(R)c_is_corr_linearity")
{
   field(PINI, "0")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))c_is_corr_linearity")
   field(ZRST, "No")
   field(ZRVL, "0")
   field(ONST, "Yes")
   field(ONVL, "1")
}

record(mbbi, "$(P)$(R)c_is_corr_linearity_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))c_is_corr_linearity")
   field(ZRST, "No")
   field(ZRVL, "0")
   field(ONST, "Yes")
   field(ONVL, "1")
   field(SCAN, "I/O Intr")
}



###
###
record(longin, "$(P)$(R)c_is_buffer_dark_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))c_is_buffer_dark")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)c_is_buffer_dark")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))c_is_buffer_dark")
}

###
###
record(longin, "$(P)$(R)p_is_quad_ccd_system_RBV")
{
   field(PINI, "0")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_is_quad_ccd_system")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)p_is_quad_ccd_system")
{
   field(PINI, "0")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_is_quad_ccd_system")
}

###
###
record(longin, "$(P)$(R)c_tags_pass_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))c_tags_pass")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)c_tags_pass")
{   
field(PINI, "0")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))c_tags_pass")
}

###
###
record(longin, "$(P)$(R)c_dark_bias_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))c_dark_bias")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)c_dark_bias")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))c_dark_bias")
}


##################################################################
#
# Serial Setup stuff
#
#
#################################################################

###
###
record(longin, "$(P)$(R)p_is_quad_ccd_system_RBV")
{
   field(PINI, "0")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_is_quad_ccd_system")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)p_is_quad_ccd_system")
{
   field(PINI, "0")

   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_is_quad_ccd_system")
}


###
###
record(longin, "$(P)$(R)p_is_send_analog_ser_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_is_send_analog_ser")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)p_is_send_analog_ser")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_is_send_analog_ser")
}

###
###
record(longin, "$(P)$(R)p_is_send_ccdprog_ser_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_is_send_ccdprog_ser")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)p_is_send_ccdprog_ser")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_is_send_ccdprog_ser")
}



record(longout, "$(P)$(R)p_serial_kludge")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_is_send_ccdprog_ser")
}

###

###
###
record(longin, "$(P)$(R)p_is_send_ccd_ser_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_is_send_ccd_ser")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)p_is_send_ccd_ser")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_is_send_ccd_ser")
}

###
###
record(longin, "$(P)$(R)p_ccd_status_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_ccd_status")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)p_ccd_status")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_ccd_status")
}

###
###
record(longin, "$(P)$(R)p_is_get_det_status_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_is_get_det_status")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)p_is_get_det_status")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_is_get_det_status")
}

###
###
record(longin, "$(P)$(R)p_exp_time_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_exp_time")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)p_exp_time")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_exp_time")
}

###
###
record(longin, "$(P)$(R)p_pre_exp_time_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_pre_exp_time")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)p_pre_exp_time")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_pre_exp_time")
}

###
###
record(longin, "$(P)$(R)p_post_exp_time_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_post_exp_time")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)p_post_exp_time")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_post_exp_time")
}

###
###


record(mbbo, "$(P)$(R)p_is_ccd_on")
{
   field(PINI, "0")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_is_ccd_on")
   field(ZRST, "No")
   field(ZRVL, "0")
   field(ONST, "Yes")
   field(ONVL, "1")
}

record(mbbi, "$(P)$(R)p_is_ccd_on_RBV")
{
   field(PINI, "0")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_is_ccd_on")
   field(ZRST, "No")
   field(ZRVL, "0")
   field(ONST, "Yes")
   field(ONVL, "1")
   field(SCAN, "I/O Intr")
}


###
###

record(mbbo, "$(P)$(R)p_test_img")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_test_img")
   field(ZRST, "No")
   field(ZRVL, "0")
   field(ONST, "Yes")
   field(ONVL, "1")
}

record(mbbi, "$(P)$(R)p_test_img_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_test_img")
   field(ZRST, "No")
   field(ZRVL, "0")
   field(ONST, "Yes")
   field(ONVL, "1")
   field(SCAN, "I/O Intr")
}



###
###
record(longin, "$(P)$(R)p_is_hw_exp_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_is_hw_exp")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)p_is_hw_exp")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_is_hw_exp")
}

###
###
record(longin, "$(P)$(R)p_is_abort_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_is_abort")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)p_is_abort")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_is_abort")
}

###
###
record(longin, "$(P)$(R)p_reboot_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_reboot")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)p_reboot")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_reboot")
}

###
###
record(longin, "$(P)$(R)p_init1_RBV")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_init1")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)p_init1")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_init1")
}




###
###


record(longout, "$(P)$(R)p_irsf")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_is_read_setupfile")
}




record(longout, "$(P)$(R)p_dbg_por")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_dbg_por")
}



###



record(longout, "$(P)$(R)p_cor_readout")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_cor_readout")
}



record(longout, "$(P)$(R)p_is_clear_serial_pipe")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_is_clear_serial_pipe")
}



record(longout, "$(P)$(R)p_is_ccd_pc_rst")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_is_ccd_pc_rst")
}



record(longout, "$(P)$(R)p_is_reset_flag")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_is_reset_flag")
}


record(longout, "$(P)$(R)p_is_weiz_ping")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_is_weiz_ping")
}


###









# File path.
record(waveform, "$(P)$(R)p_dbg_text_param")
{
    field(PINI, "1")
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_dbg_text_param")
    field(FTVL, "UCHAR")
    field(NELM, "256")
}

# File path.
record(waveform, "$(P)$(R)p_dbg_text_val")
{
    field(PINI, "1")
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))p_dbg_text_val")
    field(FTVL, "UCHAR")
    field(NELM, "256")
}


