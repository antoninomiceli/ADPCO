/*
 * scatterPlugin.h
  *Tim Madden
 */

#ifndef scatterPlugin_H
#define scatterPlugin_H


#include <stdlib.h>
#include <string.h>
#include <stdio.h>
#include <errno.h>
#include <sys/types.h>
#include <sys/stat.h>

#include <string>
using std::string;
//#include <direct.h>

#include "NDPluginFile.h"








/** Enums for plugin-specific parameters. There are currently no specific parameters for this driver yet.
  * It uses the ADStdDriverParams and NDPluginDriver params. */


class scatterPlugin : public NDPluginFile {
public:
    scatterPlugin(const char *portName, int queueSize, int blockingCallbacks,
                 const char *NDArrayPort, int NDArrayAddr,
                 int priority, int stackSize);

	virtual void processCallbacks(NDArray *pArray);
    /* The methods that this class implements */
    virtual asynStatus openFile(const char *fileName, NDFileOpenMode_t openMode, NDArray *pArray);
    virtual asynStatus readFile(NDArray **pArray);
    virtual asynStatus writeFile(NDArray *pArray);
    virtual asynStatus closeFile();

	int getIntParam(int param);

    
 //virtual asynStatus drvUserCreate(asynUser *pasynUser, const char *drvInfo,
 //                            const char **pptypeName, size_t *psize);
protected:

//enough for 1 edge imgae. pco imges are smaller...
	
    enum {max_list_len=256};
    NDArray *img_list[max_list_len];
    int list_len;
    int num_imgs_in_list;
    
    //set list to 0's
    void clearList(void);
    // insert into list, 0 is good, -1 list full.
    int addList(NDArray *img);
    //find index of lowest id img in list, 0 good, -1 error, empty list
    int findMinId(int *id, int *index);
    //delist an image, -1 on error
    int removeImg(int index);
    
    
    //curret id
    int current_img_id;
    
	

	//
	// ////////////   PARAMETERS ////////////////////
	//
	
	int sim_first;
	 #define FIRST_scatterPlugin_PARAM sim_first

	int sc_num_out_ports;
	int sc_img_list_len;
	int sc_cur_img_id;
		
	
	
	
	
	
	int sim_last;
	 #define LAST_scatterPlugin_PARAM sim_last
	
	
	//
	//////////////// END PARAMETERS ///////////////////
	//
	
    int num_ports;
	enum {max_ports=256};
	asynPortDriver *port_list[max_ports];
};


#define NUM_scatterPlugin_PARAMS (&LAST_scatterPlugin_PARAM - &FIRST_scatterPlugin_PARAM + 1)

#endif
